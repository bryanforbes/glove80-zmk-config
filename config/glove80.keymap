/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>

/* Include behaviour includes needed by key binds - automatically generated */
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#include "./zmk-nodefree-config/helper.h"
#include "./keypos_glove80.h"

#define LEFT_HAND_KEYS   LF6 LF5 LF4 LF3 LF2 \
                         LN6 LN5 LN4 LN3 LN2 LN1 \
                         LT6 LT5 LT4 LT3 LT2 LT1 \
                         LM6 LM5 LM4 LM3 LM2 LM1 \
                         LB6 LB5 LB4 LB3 LB2 LB1 \
                         LP6 LP5 LP4 LP3 LP2

#define RIGHT_HAND_KEYS      RF2 RF3 RF4 RF5 RF6 \
                         RN1 RN2 RN3 RN4 RN5 RN6 \
                         RT1 RT2 RT3 RT4 RT5 RT6 \
                         RM1 RM2 RM3 RM4 RM5 RM6 \
                         RB1 RB2 RB3 RB4 RB5 RB6 \
                             RP2 RP3 RP4 RP5 RP6

#define THUMB_KEYS       LH1 LH2 LH3     RH3 RH2 RH1 \
                         LH4 LH5 LH6     RH6 RH5 RH4

#define MAKE_HRM(NAME, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        bindings = <&kp>, <&kp>; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <175>; \
        global-quick-tap-ms = <120>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

&sk {  // sticky-key config
    quick-release;
};

&caps_word {  // caps word config
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/* Custom behaviors/combos/layers */

ZMK_COMBO(copy, &kp LG(C), LM3 LB3, 0, 50)

MAKE_HRM(hml, RIGHT_HAND_KEYS THUMB_KEYS)
MAKE_HRM(hmr, LEFT_HAND_KEYS THUMB_KEYS)

ZMK_BEHAVIOR(thumb, hold_tap,
    flavor = "balanced";
    bindings = <&mo>, <&kp>;
    tapping-term-ms = <200>; // extra delay
    quick-tap-ms = <200>;
)

// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_BEHAVIOR(smart_shft, mod_morph,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)

/* Standard Glove80 behaviors and macros */

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
};

ZMK_LAYER(Base,
// ╭───────────────┬──────────────┬─────────────┬─────────────┬───────────────╮                                                                                                                                    ╭───────────────┬─────────────────┬───────────────┬─────────────────┬────────────────╮
     &kp C_BRI_DN   &kp C_BRI_UP    &kp C_PREV    &kp C_PP      &kp C_NEXT                                                                                                                                           &kp C_MUTE      &kp C_VOL_DN      &kp C_VOL_UP    &kp F9            &kp LG(LS(N4))
// ├───────────────┼──────────────┼─────────────┼─────────────┼───────────────┼────────╮                                                                                                                  ╭────────┼───────────────┼─────────────────┼───────────────┼─────────────────┼────────────────┤
     &kp GRAVE      &kp N1          &kp N2        &kp N3        &kp N4          &kp N5                                                                                                                      &kp N6   &kp N7          &kp N8            &kp N9          &kp N0            &kp MINUS
// ├───────────────┼──────────────┼─────────────┼─────────────┼───────────────┼────────┤                                                                                                                  ├────────┼───────────────┼─────────────────┼───────────────┼─────────────────┼────────────────┤
     &kp TAB        &kp Q           &kp W         &kp E         &kp R           &kp T                                                                                                                       &kp Y    &kp U           &kp I             &kp O           &kp P             &kp BSLH
// ├───────────────┼──────────────┼─────────────┼─────────────┼───────────────┼────────┤                                                                                                                  ├────────┼───────────────┼─────────────────┼───────────────┼─────────────────┼────────────────┤
     &mt LCTRL ESC   &hml LCTRL A   &hml LALT S   &hml LGUI D   &hml LSHIFT F   &kp G                                                                                                                       &kp H    &hmr RSHIFT J   &hmr RGUI K       &hmr LALT L     &hmr RCTRL SEMI   &kp SQT
// ├───────────────┼──────────────┼─────────────┼─────────────┼───────────────┼────────┤ ╭─────────────┬───────────────────────┬───────────────────╮ ╭───────────────────┬────────────────────┬───────────╮ ├────────┼───────────────┼─────────────────┼───────────────┼─────────────────┼────────────────┤
     &kp EQUAL       &kp Z          &hml RALT X   &hml RGUI C   &kp V           &kp B      &smart_shft   &kp LG(LS(LC(SPACE)))   &kp LG(LC(SPACE))     &kp LG(LS(SPACE))   &kp LG(SPACE)        &kp RET       &kp N    &kp M           &hmr RGUI COMMA   &hmr RALT DOT   &kp FSLH          &kp PG_UP
// ├───────────────┼──────────────┼─────────────┼─────────────┼───────────────┼────────╯ ├─────────────┼───────────────────────┼───────────────────┤ ├───────────────────┼────────────────────┼───────────┤ ╰────────┼───────────────┼─────────────────┼───────────────┼─────────────────┼────────────────┤
     &magic 2 0      &kp HOME       &kp END       &kp LEFT      &kp RIGHT                  &kp TAB       &thumb 1 ESC            &kp LG(LA(LCTRL))     &kp RET             &thumb 1 BACKSPACE   &kp SPACE              &kp LPAR        &kp LBKT          &kp RBKT        &kp RPAR          &kp PG_DN
// ╰───────────────┴──────────────┴─────────────┴─────────────┴───────────────╯          ╰─────────────┴───────────────────────┴───────────────────╯ ╰───────────────────┴────────────────────┴───────────╯          ╰───────────────┴─────────────────┴───────────────┴─────────────────┴────────────────╯
)

ZMK_LAYER(Lower,
// ╭────────────┬────────┬────────┬────────┬────────╮                                                                                ╭──────────┬────────┬───────────┬────────┬─────────╮
     &kp F1       &kp F2   &kp F3   &kp F4   &kp F5                                                                                    &kp F6     &kp F7   &kp F8      &kp F9   &kp F10
// ├────────────┼────────┼────────┼────────┼────────┼────────╮                                                            ╭──────────┼──────────┼────────┼───────────┼────────┼─────────┤
     &trans       &trans   &trans   &trans   &trans   &trans                                                                &trans     &trans     &trans   &trans      &trans   &trans
// ├────────────┼────────┼────────┼────────┼────────┼────────┤                                                            ├──────────┼──────────┼────────┼───────────┼────────┼─────────┤
     &trans       &trans   &trans   &trans   &trans   &trans                                                                &trans     &trans     &trans   &trans      &trans   &trans
// ├────────────┼────────┼────────┼────────┼────────┼────────┤                                                            ├──────────┼──────────┼────────┼───────────┼────────┼─────────┤
     &trans       &trans   &trans   &trans   &trans   &trans                                                                &kp LEFT   &kp DOWN   &kp UP   &kp RIGHT   &trans   &trans
// ├────────────┼────────┼────────┼────────┼────────┼────────┤ ╭────────┬────────┬────────╮ ╭────────┬─────────┬────────╮ ├──────────┼──────────┼────────┼───────────┼────────┼─────────┤
     &trans       &trans   &trans   &trans   &trans   &trans     &trans   &trans   &to 0      &trans   &trans    &trans     &trans     &trans     &trans   &trans      &trans   &trans
// ├────────────┼────────┼────────┼────────┼────────┼────────╯ ├────────┼────────┼────────┤ ├────────┼─────────┼────────┤ ╰──────────┼──────────┼────────┼───────────┼────────┼─────────┤
     &magic 2 0   &trans   &trans   &trans   &trans              &trans   &trans   &trans     &trans   &kp DEL   &trans                &trans     &trans   &trans      &trans   &trans
// ╰────────────┴────────┴────────┴────────┴────────╯          ╰────────┴────────┴────────╯ ╰────────┴─────────┴────────╯            ╰──────────┴────────┴───────────┴────────┴─────────╯
)

ZMK_LAYER(Magic,
// ╭─────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────╮                                                                                      ╭───────┬───────┬───────┬───────┬────────────────╮
     &bt BT_CLR    &none             &none             &none             &none                                                                                                    &none   &none   &none   &none   &bt BT_CLR_ALL
// ├─────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────╮                                                            ╭───────┼───────┼───────┼───────┼───────┼────────────────┤
     &none         &none             &none             &none             &none             &none                                                                          &none   &none   &none   &none   &none   &none
// ├─────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤                                                            ├───────┼───────┼───────┼───────┼───────┼────────────────┤
     &none         &rgb_ug RGB_SPI   &rgb_ug RGB_SAI   &rgb_ug RGB_HUI   &rgb_ug RGB_BRI   &rgb_ug RGB_TOG                                                                &none   &none   &none   &none   &none   &none
// ├─────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤                                                            ├───────┼───────┼───────┼───────┼───────┼────────────────┤
     &bootloader   &rgb_ug RGB_SPD   &rgb_ug RGB_SAD   &rgb_ug RGB_HUD   &rgb_ug RGB_BRD   &rgb_ug RGB_EFF                                                                &none   &none   &none   &none   &none   &bootloader
// ├─────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┤ ╭───────┬───────┬──────────────╮ ╭───────┬───────┬───────╮ ├───────┼───────┼───────┼───────┼───────┼────────────────┤
     &sys_reset    &none             &none             &none             &none             &none               &bt_2   &bt_3   &none            &none   &none   &none     &none   &none   &none   &none   &none   &sys_reset
// ├─────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────╯ ├───────┼───────┼──────────────┤ ├───────┼───────┼───────┤ ╰───────┼───────┼───────┼───────┼───────┼────────────────┤
     &none         &none             &none             &none             &none                                 &bt_0   &bt_1   &out OUT_USB     &none   &none   &none             &none   &none   &none   &none   &none
// ╰─────────────┴─────────────────┴─────────────────┴─────────────────┴─────────────────╯                   ╰───────┴───────┴──────────────╯ ╰───────┴───────┴───────╯         ╰───────┴───────┴───────┴───────┴────────────────╯
)
